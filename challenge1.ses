{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[7]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}

//Begin ChannelBuild[0] managed KSChan[0]
{
load_file("chanbild.hoc", "ChannelBuild")
}
{ocbox_ = new ChannelBuild(0)}
{object_push(ocbox_)}
{genprop.set_data("ch3", 0, 1, -1, "NonSpecific")}
{genprop.set_defstr(0, 0)}
tobj = new ChannelBuildKSGate(this)
{gatelist.append(tobj)}
{tobj.begin_restore(1)}
{tobj.set_state("C", 0, 50, 100)}
{tobj.set_state("C2", 0, 100, 100)}
{tobj.set_state("O", 1, 150, 100)}
{tobj.set_trans(0, 1, 1)}
{tobj.transitions.object(0).settype(1, "")}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
1
-1
-20
{tobj.transitions.object(0).set_f(0, 4, tobj1)}
{tobj1 = new Vector(1)  for (i=0; i < 1; i += 1) tobj1.x[i] = fscan() }
2
{tobj.transitions.object(0).set_f(1, 1, tobj1)}
{tobj.set_trans(1, 2, 1)}
{tobj.transitions.object(1).settype(1, "")}
{tobj1 = new Vector(3)  for (i=0; i < 3; i += 1) tobj1.x[i] = fscan() }
1
-1
-25
{tobj.transitions.object(1).set_f(0, 4, tobj1)}
{tobj1 = new Vector(1)  for (i=0; i < 1; i += 1) tobj1.x[i] = fscan() }
4
{tobj.transitions.object(1).set_f(1, 1, tobj1)}
{tobj.end_restore()}
end_restore()
{genprop.set_single(1)}
{set_alias(0)}
{usetable(0)}
{object_pop()}
{
ocbox_.map("ChannelBuild[0] managed KSChan[0]", 409, 31, 244.8, 273.6)
}
objref ocbox_
//End ChannelBuild[0] managed KSChan[0]


//Begin SingleCompartment
{
load_file("single.hoc")
}
ocbox_ = new SingleCompartment(0)
ocbox_.inserter = new Inserter(0)
{object_push(ocbox_.inserter)}
{
}
{object_pop() doNotify()}
{object_push(ocbox_)}
{inserter.v1.map()}
{endbox()}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.vbox
ocbox_.map("SingleCompartment", 57, 117, 91.2, 96)
}
objref ocbox_
//End SingleCompartment


//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
soma ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("SEClamp") i = mt.selected()
ms[i] = new MechanismStandard("SEClamp")
ms[i].set("rs", 0.01, 0)
ms[i].set("dur1", 100, 0)
ms[i].set("amp1", 20, 0)
ms[i].set("dur2", 0, 0)
ms[i].set("amp2", 0, 0)
ms[i].set("dur3", 0, 0)
ms[i].set("amp3", 0, 0)
mt.select("SEClamp") i = mt.selected() maction(i)
hoc_ac_ = 0.5
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 57, 671, 208.32, 401.28)
}
objref ocbox_
//End PointProcessManager


//Begin PointProcessManager
{
load_file("pointman.hoc")
}
{
soma ocbox_ = new PointProcessManager(0)
}
{object_push(ocbox_)}
{
mt.select("ch3") i = mt.selected()
ms[i] = new MechanismStandard("ch3")
ms[i].set("Nsingle", 0, 0)
ms[i].set("gmax", 0.001, 0)
ms[i].set("e", 0, 0)
mt.select("ch3") i = mt.selected() maction(i)
hoc_ac_ = 0.5
sec.sec move() d1.flip_to(0)
}
{object_pop() doNotify()}
{
ocbox_ = ocbox_.v1
ocbox_.map("PointProcessManager", 374, 364, 208.32, 382.08)
}
objref ocbox_
//End PointProcessManager

{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 50
xvalue("t","t", 2 )
tstop = 50
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.1
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 10
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(51,256)
}
{
save_window_ = new Graph(0)
save_window_.size(0,51,0,0.001)
scene_vector_[4] = save_window_
{save_window_.view(0, 0, 51, 0.001, 733, 34, 300.48, 200.32)}
graphList[2].append(save_window_)
save_window_.save_name("graphList[2].")
save_window_.addvar("ch3[0].g", 1, 1, 0.8, 0.9, 2)
}

//Begin ExecCommand[0]
{
ocbox_=new ExecCommand("KSChan[0].rseed (0)", 1)
ocbox_=ocbox_.b
ocbox_.map("ExecCommand[0]", 304, 803, 340.8, 60.48)
}
objref ocbox_
//End ExecCommand[0]

objectvar scene_vector_[1]
{doNotify()}
